#
# Namespace
#
apiVersion: v1
kind: Namespace
metadata:
  name: "{{APP}}"
---
#
# The app's secrets, configs, deployment and service
#
apiVersion: v1
kind: Secret
metadata:
  name: "{{APP}}-secrets"
  namespace: "{{APP}}"
  labels:
    app: "{{APP}}"
type: Opaque
stringData:
  SLACK_SIGNING_SECRET: "{{SLACK_SIGNING_SECRET}}"
  SLACK_APP_TOKEN: "{{SLACK_APP_TOKEN}}"
  SLACK_BOT_TOKEN: "{{SLACK_BOT_TOKEN}}"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{APP}}-configs"
  namespace: "{{APP}}"
  labels:
    app: "{{APP}}"
data:
  placeholder: "in case needed in future"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{APP}}"
  namespace: "{{APP}}"
  labels:
    app: "{{APP}}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "{{APP}}"
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: "{{APP}}"
    spec:
      containers:
        - name: "{{APP}}"
          image: "{{IMG}}"
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 1
              memory: 128Mi
            limits:
              cpu: 2
              memory: 256Mi
          envFrom:
            - configMapRef:
                name: "{{APP}}-configs"
            - secretRef:
                name: "{{APP}}-secrets"
          ports:
            - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: "{{APP}}"
  namespace: "{{APP}}"
  labels:
    app: "{{APP}}"
spec:
  type: LoadBalancer
  selector:
    app: "{{APP}}"
  ports:
    - name: http
      port: 80
      targetPort: 3000
